{
  "name": "Scraper 1",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "1dc84f9e-2fe3-4fb2-b56b-895a728e158a",
      "name": "When chat message received",
      "webhookId": "c4f220d7-6dc0-47c8-ad7a-0efdac3dc8bc"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Overview\nYou are the personal assistant that excels at web scraping. Your job is to send the user's query to the correct tool.\n\n## Tools\n- google_maps_web_scraper: Use this tool to web scrape google. You'll want to aggregate all the results together and send a list back to the user\n- yellow_pages_web_scraper: Use this tool to web scrape yellow pages. You'll want to aggregate all the results together and send a list back to the user\n- apollo_web_scraper: Use this tool to web scrape web apollo. You'll want to aggregate all the results together and send a list back to the user\n- instagram_web_scraper: Use this tool to web scrape instagram. You'll want to aggregate all the results together and send a list back to the user\n- tiktok_web_scraper: Use this tool to web scrape tiktok. You'll want to aggregate all the results together and send a list back to the user\n\nIf the user asks you to scrape multiple sources, please combine them all in one output.\n\n## Workflow inputs\n- search: please insert the Industry. For example: plumbing, or Land Scaping\n- location: please insert the city. For example: Toronto, or Los Angeles\n- state: please insert the state/province code uppercase. For example: NY, CA\n- country: please insert the country code, lower case. For example: ca, or us\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "ea018ddf-bd94-4af7-a727-5894e8ad1e87",
      "name": "AI Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        160
      ],
      "id": "fb4636fe-5c8f-4607-b1e8-f73e74f7492b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "qi1OWZHQF1BGy31H",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        300,
        160
      ],
      "id": "bd1a427b-0e6d-4984-b3d6-5e542c593c11",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "Call this tool when the user wants to scrape google maps.",
        "workflowId": {
          "__rl": true,
          "value": "6hF01tKGvCDNOL2l",
          "mode": "list",
          "cachedResultName": "Google maps v2"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "search": "={{  $fromAI(\"industry\",\"this is the industry that we're going to use for web scrape results from google maps\") }}",
            "location": "={{  $fromAI(\"location\",\"this is the location that we're going to use for web scrape results from google maps\") }}",
            "state": "={{  $fromAI(\"state\",\"this is the state that we're going to use for web scrape results from google maps\") }}",
            "country": "={{  $fromAI(\"country\",\"this is the country that we're going to use for web scrape results from google maps\") }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "search",
              "displayName": "search",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "state",
              "displayName": "state",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "country",
              "displayName": "country",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        480,
        160
      ],
      "id": "3a509afb-bea6-4df2-b093-8b4cc85251a5",
      "name": "Call n8n Workflow Tool"
    },
    {
      "parameters": {
        "content": "üß† AI Prompt Handler Workflow ",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -420,
        20
      ],
      "id": "fbf995ac-9244-4a8f-82f9-ced3e5a684cb",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "üó®Ô∏è Chat Trigger \n\n Starts when a user sends a message (like ‚ÄúScrape barbershops in Toronto‚Äù).",
        "height": 120,
        "width": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -80,
        -140
      ],
      "id": "e9e6612d-e346-4815-997e-cd2876f009f6",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "ü§ñ AI Agent \n\n Powered by OpenAI (GPT-3.5), it understands the prompt and extracts:\n-Business type\n-City\n-Province & country",
        "height": 180,
        "width": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        -80
      ],
      "id": "eeae6984-0220-4fac-9678-d743aaff4dce",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "üß† Simple Memory \n\n Remembers up to 5 messages for smoother multi-step prompts.",
        "height": 120,
        "width": 220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        280
      ],
      "id": "f5fb098e-13c9-478d-a2ff-6e3d58eabdc1",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "üß∞ Workflow Trigger Tool \n\n Passes the extracted info to the scraper workflow.",
        "height": 120,
        "width": 220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        580,
        280
      ],
      "id": "bd5895f6-0eb6-4ee4-af1e-e85309c81657",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ae4bc278-c402-47dd-a9e7-775605a0d082",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6dd6f6873b475621fba8303fa7dff6507ea0b1f80ecd65d4c62a0ac5c528618c"
  },
  "id": "AWnNijmMyArb2OBH",
  "tags": []
}